## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Category Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List All Categories'
      description: 'Show a list of all categories with the count of tasks in each category.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"code":20000,"message":"Categories retrieved successfully","data":[{"id":1,"name":"Pekerjaan","created_at":"2025-09-08T06:42:18.000000Z","updated_at":"2025-09-08T06:42:18.000000Z","tasks_count":2},{"id":2,"name":"Pribadi","created_at":"2025-09-08T06:42:18.000000Z","updated_at":"2025-09-08T06:42:18.000000Z","tasks_count":3}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/categories
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add New Category'
      description: 'Add a new category to the database.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category.'
        required: true
        example: Work
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Work
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"code":20000,"message":"Category created successfully"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"success":false,"code":42201,"message":"The given data was invalid.","errors":{"name":["The name field is required."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Category'
      description: 'Delete a category by its ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"code":20000,"message":"Category deleted successfully"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"success":false,"code":40401,"message":"Category not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
